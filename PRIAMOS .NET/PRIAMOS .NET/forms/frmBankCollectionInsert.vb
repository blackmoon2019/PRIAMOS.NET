Imports System.Data.SqlClient
Imports System.Text
Imports System.Text.RegularExpressions
Imports DevExpress.XtraBars.Navigation
Imports DevExpress.XtraEditors
Imports DevExpress.XtraEditors.Controls
Imports DevExpress.XtraGrid.Views.Base
Imports DevExpress.XtraGrid.Views.Grid


Public Class frmBankCollectionInsert
    Private DBQ As New DBQueries
    Private LoadForms As New FormLoader
    Private BankMode As Integer
    Private sFileName As String
    Sub New()

        InitializeComponent()
        ' This line of code is generated by Data Source Configuration Wizard
        ' Fill the ExcelDataSource
    End Sub


    Private Sub frmBankCollectionInsert_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        'TODO: This line of code loads data into the 'Priamos_NETDataSet.vw_BDG' table. You can move, or remove it, as needed.
        Me.Vw_BDGTableAdapter.Fill(Me.Priamos_NETDataSet.vw_BDG)
        'TODO: This line of code loads data into the 'Priamos_NETDataSet32.NBG' table. You can move, or remove it, as needed.
        Me.NBGTableAdapter.Fill(Me.Priamos_NETDataSet32.NBG)
        'TODO: This line of code loads data into the 'Priamos_NETDataSet3.EUROBANK' table. You can move, or remove it, as needed.
        Me.EUROBANKTableAdapter.Fill(Me.Priamos_NETDataSet3.EUROBANK)
        'TODO: This line of code loads data into the 'Priamos_NETDataSet31.ALPHA' table. You can move, or remove it, as needed.
        Me.ALPHATableAdapter.Fill(Me.Priamos_NETDataSet31.ALPHA)
        'TODO: This line of code loads data into the 'Priamos_NETDataSet31.PIREOS' table. You can move, or remove it, as needed.
        ' Φορτώνω ένα απόλα τα XML. Δεν με ενδιαφέρει ποιο. Για να έχω την μορφοποίηση
        ' LoadForms.RestoreLayoutFromXml(GridView5, "PIREOS.xml")
        grdBANKS.DataSource = Nothing
        AddHandler RepApt.EditValueChanged, AddressOf RepApt_Changed
        AddHandler RepColPerBdgApt.EditValueChanged, AddressOf RepColPerBdgApt_Changed
        Me.CenterToScreen()

    End Sub

    Private Sub frmBankCollectionInsert_Resize(sender As Object, e As EventArgs) Handles Me.Resize
        'If Me.WindowState = FormWindowState.Maximized Then frmMain.XtraTabbedMdiManager1.Dock(Me, frmMain.XtraTabbedMdiManager1)
    End Sub

    Private Sub FilesSelection()
        Try
            Select Case BankMode
                Case 1, 4 : XtraOpenFileDialog1.Filter = "Excel files (*.xlsx)|*.xlsx|All files (*.*)|*.*"
                Case 2, 3 : XtraOpenFileDialog1.Filter = "CSV files (*.csv)|*.csv|All files (*.*)|*.*"
            End Select
            XtraOpenFileDialog1.FilterIndex = 1
            XtraOpenFileDialog1.InitialDirectory = Application.ExecutablePath
            Select Case BankMode
                Case 1 : XtraOpenFileDialog1.Title = "Άνοιγμα αρχείου ΠΕΙΡΑΙΩΣ"
                Case 2 : XtraOpenFileDialog1.Title = "Άνοιγμα αρχείου ALPHA"
                Case 3 : XtraOpenFileDialog1.Title = "Άνοιγμα αρχείου EUROBANK"
                Case 4 : XtraOpenFileDialog1.Title = "Άνοιγμα αρχείου ΕΘΝΙΚΗΣ"
            End Select
            XtraOpenFileDialog1.FileName = ""
            XtraOpenFileDialog1.CheckFileExists = False
            XtraOpenFileDialog1.Multiselect = False
            XtraOpenFileDialog1.RestoreDirectory = True
            Dim result As DialogResult = XtraOpenFileDialog1.ShowDialog()
            If result = DialogResult.OK Then
                Select Case BankMode
                    Case 1
                        PIREOS.FileName = XtraOpenFileDialog1.FileName
                        sFileName = XtraOpenFileDialog1.SafeFileName
                        GridView5.Columns.Clear() : grdBANKS.DataSource = Nothing : PIREOS.Fill() : grdBANKS.DataSource = PIREOS
                        grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                        GridView5.Columns(0).Caption = "Αιτιολογία"
                        GridView5.Columns(1).Caption = "Ημερ/νία Καταχώρησης"
                        GridView5.Columns(2).Caption = "Ποσό"
                        PIREOS.Dispose()
                        PIREOS_TRANS()
                       ' HyperlinkLabelControl1.Text = "Αρχείο ΠΕΙΡΑΙΩΣ: " & XtraOpenFileDialog1.FileName
                    Case 2
                        ALPHA.FileName = XtraOpenFileDialog1.FileName
                        sFileName = XtraOpenFileDialog1.SafeFileName
                        GridView5.Columns.Clear() : grdBANKS.DataSource = Nothing : ALPHA.Fill() : grdBANKS.DataSource = ALPHA
                        grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                        GridView5.Columns(0).Caption = "Ημερ/νία Καταχώρησης"
                        GridView5.Columns(1).Caption = "Αιτιολογία"
                        GridView5.Columns(2).Caption = "Ποσό"
                        ALPHA.Dispose()
                        ALPHA_TRANS()
                       ' HyperlinkLabelControl1.Text = "Αρχείο ALPHA: " & XtraOpenFileDialog1.FileName
                    Case 3
                        EUROBANK.FileName = XtraOpenFileDialog1.FileName
                        sFileName = XtraOpenFileDialog1.SafeFileName
                        GridView5.Columns.Clear() : grdBANKS.DataSource = Nothing : EUROBANK.Fill() : grdBANKS.DataSource = EUROBANK
                        grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                        GridView5.Columns(0).Caption = "Ημερ/νία Καταχώρησης"
                        GridView5.Columns(1).Caption = "Αιτιολογία"
                        GridView5.Columns(2).Caption = "Ποσό"
                        EUROBANK.Dispose()
                        EUROBANK_TRANS()
                      '  HyperlinkLabelControl1.Text = "Αρχείο EUROBANK: " & XtraOpenFileDialog1.FileName
                    Case 4
                        NBG.FileName = XtraOpenFileDialog1.FileName
                        sFileName = XtraOpenFileDialog1.SafeFileName
                        GridView5.Columns.Clear() : grdBANKS.DataSource = Nothing : NBG.Fill() : grdBANKS.DataSource = NBG
                        grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                        GridView5.Columns(0).Caption = "Ημερ/νία Καταχώρησης"
                        GridView5.Columns(1).Caption = "Ποσό"
                        GridView5.Columns(2).Caption = "Αιτιολογία"
                        NBG.Dispose()
                        NBG_TRANS()
                        '  HyperlinkLabelControl1.Text = "Αρχείο ΕΘΝΙΚΗΣ: " & XtraOpenFileDialog1.FileName
                End Select
            End If
            GridView5.BestFitColumns()

        Catch ex As DevExpress.DataAccess.Excel.InvalidWorksheetNameValidationException
            Select Case BankMode
                Case 1 : XtraMessageBox.Show("Το excel που επιλέξατε δεν ανήκει στην τράπεζα Πειραώς", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
                Case 2 : XtraMessageBox.Show("Το excel που επιλέξατε δεν ανήκει στην τράπεζα Alpha", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
                Case 3 : XtraMessageBox.Show("Το excel που επιλέξατε δεν ανήκει στην τράπεζα Eurobank", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
                Case 4 : XtraMessageBox.Show("Το excel που επιλέξατε δεν ανήκει στην τράπεζα Εθνική", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            End Select

        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub
    Private Sub PIREOS_TRANS()
        Dim sValRow As String, sDate As String, sCredit As Double
        Dim sbdgCode As String, sbdgID As String, sbdgNam As String, sApt As String, sAptAlternative As String
        Dim sAptID As String, sAptTTL As String
        Dim regex As New Regex("(\d{5})")
        Dim Cmd As SqlCommand, sdr As SqlDataReader
        Dim ItemsCorrect As Integer = 0, ItemsWrong As Integer = 0
        Dim sPireosID As String, sPireosFileID As String
        Try
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always
            ProgressBarControl1.EditValue = 0
            ProgressBarControl1.Properties.Step = 1
            ProgressBarControl1.Properties.PercentView = True
            ProgressBarControl1.Properties.Maximum = GridView5.DataRowCount - 1
            ProgressBarControl1.Properties.Minimum = 0
            lstLog.Items.Clear()
            Dim sSQL As New System.Text.StringBuilder
            ' Cmd = New SqlCommand("TRUNCATE TABLE PIREOS", CNDB) : Cmd.ExecuteNonQuery()
            sPireosFileID = System.Guid.NewGuid.ToString
            For i As Integer = 0 To GridView5.DataRowCount - 1
                If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then

                    sValRow = GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName).ToString().Trim
                    sValRow = sValRow.Replace("                           (ΜΕΤΑΦΟΡΑ ΑΠΟ ΛΟΓ.ΤΡΙΤΟΥ)", "")
                    sValRow = sValRow.Replace("(ΜΕΤΑΦΟΡΑ ΑΠΟ ΛΟΓ.ΤΡΙΤΟΥ)", "").Trim
                    If GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName) IsNot Nothing Then sDate = GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName).ToString()
                    sCredit = GridView5.GetRowCellValue(i, GridView5.Columns(2).FieldName)
                    sbdgCode = regex.Match(sValRow).ToString
                    Dim Pos As Integer = InStr(sValRow.Trim, sbdgCode)
                    sApt = sValRow.Substring(Pos + sbdgCode.Length - 1, sValRow.Length - Pos - (sbdgCode.Length - 1)).Replace(" ", "").Trim
                    sAptAlternative = ConvertCharToENGR(sApt)

                    If sbdgCode.Length > 0 Then
                        Cmd = New SqlCommand("SELECT top 1 ID,Nam FROM BDG WHERE coalesce(old_Code,code)= " & toSQLValueS(sbdgCode), CNDB)
                        sdr = Cmd.ExecuteReader()
                        If (sdr.Read() = True) Then sbdgID = sdr.GetGuid(sdr.GetOrdinal("ID")).ToString : sbdgNam = sdr.GetString(sdr.GetOrdinal("Nam"))
                        sdr.Close()
                        Cmd = New SqlCommand("SELECT top 1 id,ttl FROM vw_APT WHERE coalesce(bdgoldCode,bdgcode)= " & toSQLValueS(sbdgCode) & " and (ttl = " & toSQLValueS(sApt) & " OR ttl = " & toSQLValueS(sAptAlternative) & ")", CNDB)
                        sdr = Cmd.ExecuteReader()
                        If (sdr.Read() = True) Then sAptID = sdr.GetGuid(sdr.GetOrdinal("id")).ToString : sAptTTL = sdr.GetString(sdr.GetOrdinal("ttl"))
                        sdr.Close()
                    End If
                    Try
                        sPireosID = System.Guid.NewGuid.ToString
                        'Εισαγωγή εγγραφών από Ecxel sthn Βάση
                        sSQL.AppendLine("INSERT INTO PIREOS (ID,reason,aptID,TTL,dtCreate,bdgID, bdgNam,bdgCode,credit,BankID,colBanksFID) VALUES( ")
                        sSQL.AppendLine(toSQLValueS(sPireosID) & ",")
                        sSQL.AppendLine(toSQLValueS(sValRow) & ",")
                        sSQL.AppendLine(toSQLValueS(sAptID) & ",")
                        sSQL.AppendLine(toSQLValueS(sAptTTL) & ",")
                        If sDate.Length > 0 Then sSQL.AppendLine(toSQLValueS(CDate(sDate).ToString("yyyyMMdd")) & ",") Else sSQL.AppendLine("NULL,")
                        sSQL.AppendLine(toSQLValueS(sbdgID) & ",")
                        sSQL.AppendLine(toSQLValueS(sbdgNam) & ",")
                        sSQL.AppendLine(toSQLValueS(sbdgCode) & ",")
                        sSQL.AppendLine(toSQLValueS(sCredit, True) & ",")
                        sSQL.AppendLine(toSQLValueS("92B4B01C-0F8C-4A02-982A-149C02F42C32") & ",")
                        sSQL.AppendLine(toSQLValueS(sPireosFileID) & ")")
                        Using oCmd As New SqlCommand(sSQL.ToString, CNDB)
                            oCmd.ExecuteNonQuery()
                        End Using
                        lstLog.Items.Add("Η εγγραφή Καταχωρήθηκε με επιτυχία!-->" & sValRow)
                        lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(0)
                        lstLog.Items(lstLog.Items.Count - 1).Tag = sPireosID
                        ItemsCorrect = ItemsCorrect + 1
                    Catch ex As Exception
                        lstLog.Items.Add(ex.Message.ToString.Replace(vbCrLf, ""))
                        lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(1)
                        ItemsWrong = ItemsWrong + 1
                    End Try
                    sSQL.Clear()
                    sbdgID = "" : sbdgNam = "" : sAptID = "" : sAptTTL = ""

                End If
                ProgressBarControl1.PerformStep()
                ProgressBarControl1.Update()
            Next i
            grdBANKS.DataSource = Nothing
            Me.PIREOSTableAdapter.Fill(Me.Priamos_NETDataSet3.PIREOS)
            grdBANKS.DataSource = Me.Priamos_NETDataSet3.PIREOS
            grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
            LoadForms.RestoreLayoutFromXml(GridView5, "PIREOS.xml")
            GridView5.BestFitColumns()

            lstLog.Items.Add("Καταχωρήθηκαν: " & ItemsCorrect & " Λάθοι: " & ItemsWrong)
            lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(2)
            If ItemsCorrect > 0 Then
                Dim sResult As Boolean = DBQ.InsertNewDataFiles(XtraOpenFileDialog1, "COL_BANKS_F", sPireosFileID)
                If sResult = False Then XtraMessageBox.Show("Προσοχή το αρχείο Excel δεν αποθηκεύθηκε στην βάση", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never
        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never
        End Try

    End Sub

    Private Sub ALPHA_TRANS()
        Dim sValRow As String, sDate As String, sCredit As Double
        Dim sbdgCode As String, sbdgID As String, sbdgNam As String, sApt As String, sAptAlternative As String
        Dim sAptID As String, sAptTTL As String, sTransactionID As String
        Dim regex As New Regex("(\d{5})")
        Dim Cmd As SqlCommand, sdr As SqlDataReader
        Dim ItemsCorrect As Integer = 0, ItemsWrong As Integer = 0
        Dim sAlphabankID As String, sAlphabankFileID As String

        Try
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always
            ProgressBarControl1.EditValue = 0
            ProgressBarControl1.Properties.Step = 1
            ProgressBarControl1.Properties.PercentView = True
            ProgressBarControl1.Properties.Maximum = GridView5.DataRowCount - 1
            ProgressBarControl1.Properties.Minimum = 0
            lstLog.Items.Clear()
            Dim sSQL As New System.Text.StringBuilder
            'Cmd = New SqlCommand("TRUNCATE TABLE ALPHA", CNDB) : Cmd.ExecuteNonQuery()
            sAlphabankFileID = System.Guid.NewGuid.ToString

            For i As Integer = 0 To GridView5.DataRowCount - 1
                If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then
                    If GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName) IsNot Nothing Then
                        sValRow = GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName).ToString()
                        If sValRow <> "Αιτιολογία" Then
                            If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then sDate = GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName).ToString()
                            sCredit = GridView5.GetRowCellValue(i, GridView5.Columns(3).FieldName)
                            sbdgCode = regex.Match(sValRow).ToString
                            Dim Pos As Integer = InStr(sValRow.Trim, sbdgCode)
                            sApt = sValRow.Substring(Pos + sbdgCode.Length - 1, sValRow.Length - Pos - (sbdgCode.Length - 1)).Replace(" ", "").Trim
                            sAptAlternative = ConvertCharToENGR(sApt)
                            sTransactionID = GridView5.GetRowCellValue(i, GridView5.Columns(2).FieldName)

                            If sCredit <> 0 Then
                                If sbdgCode.Length > 0 Then

                                    Cmd = New SqlCommand("SELECT top 1 ID,Nam FROM BDG WHERE coalesce(old_Code,code)= " & toSQLValueS(sbdgCode), CNDB)
                                    sdr = Cmd.ExecuteReader()
                                    If (sdr.Read() = True) Then sbdgID = sdr.GetGuid(sdr.GetOrdinal("ID")).ToString : sbdgNam = sdr.GetString(sdr.GetOrdinal("Nam"))
                                    sdr.Close()
                                    Cmd = New SqlCommand("SELECT top 1 id,ttl FROM vw_APT WHERE coalesce(bdgoldCode,bdgcode)= " & toSQLValueS(sbdgCode) & " and (ttl = " & toSQLValueS(sApt) & " OR ttl = " & toSQLValueS(sAptAlternative) & ")", CNDB)
                                    sdr = Cmd.ExecuteReader()
                                    If (sdr.Read() = True) Then sAptID = sdr.GetGuid(sdr.GetOrdinal("id")).ToString : sAptTTL = sdr.GetString(sdr.GetOrdinal("ttl"))
                                    sdr.Close()
                                End If
                                Try
                                    sAlphabankID = System.Guid.NewGuid.ToString
                                    'Εισαγωγή εγγραφών από Ecxel sthn Βάση
                                    sSQL.AppendLine("INSERT INTO ALPHA (ID,TransactionID,reason,aptID,TTL,dtCreate,bdgID, bdgNam,bdgCode,credit,BankID,colBanksFID) VALUES( ")
                                    sSQL.AppendLine(toSQLValueS(sAlphabankID) & ",")
                                    sSQL.AppendLine(toSQLValueS(sTransactionID) & ",")
                                    sSQL.AppendLine(toSQLValueS(sValRow) & ",")
                                    sSQL.AppendLine(toSQLValueS(sAptID) & ",")
                                    sSQL.AppendLine(toSQLValueS(sAptTTL) & ",")
                                    If sDate.Length > 0 Then sSQL.AppendLine(toSQLValueS(CDate(sDate).ToString("yyyyMMdd")) & ",") Else sSQL.AppendLine("NULL,")
                                    sSQL.AppendLine(toSQLValueS(sbdgID) & ",")
                                    sSQL.AppendLine(toSQLValueS(sbdgNam) & ",")
                                    sSQL.AppendLine(toSQLValueS(sbdgCode) & ",")
                                    sSQL.AppendLine(toSQLValueS(sCredit, True) & ",")
                                    sSQL.AppendLine(toSQLValueS("019A838C-4411-48B7-A6D0-D4F33B78E619") & ",")
                                    sSQL.AppendLine(toSQLValueS(sAlphabankFileID) & ")")
                                    Using oCmd As New SqlCommand(sSQL.ToString, CNDB)
                                        oCmd.ExecuteNonQuery()
                                    End Using
                                    lstLog.Items.Add("Η εγγραφή Καταχωρήθηκε με επιτυχία!-->" & sValRow)
                                    lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(0)
                                    lstLog.Items(lstLog.Items.Count - 1).Tag = sAlphabankID
                                    ItemsCorrect = ItemsCorrect + 1
                                Catch ex As Exception
                                    lstLog.Items.Add(ex.Message.ToString.Replace(vbCrLf, ""))
                                    lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(1)
                                    ItemsWrong = ItemsWrong + 1
                                End Try
                                sSQL.Clear()
                                sbdgID = "" : sbdgNam = "" : sAptID = "" : sAptTTL = ""
                            End If
                        End If
                    End If
                End If
                ProgressBarControl1.PerformStep()
                ProgressBarControl1.Update()
            Next i
            grdBANKS.DataSource = Nothing
            Me.ALPHATableAdapter.Fill(Me.Priamos_NETDataSet3.ALPHA)
            grdBANKS.DataSource = Me.Priamos_NETDataSet3.ALPHA
            grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
            LoadForms.RestoreLayoutFromXml(GridView5, "ALPHA.xml")
            GridView5.BestFitColumns()
            lstLog.Items.Add("Καταχωρήθηκαν: " & ItemsCorrect & " Λάθοι: " & ItemsWrong)
            lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(2)
            If ItemsCorrect > 0 Then
                Dim sResult As Boolean = DBQ.InsertNewDataFiles(XtraOpenFileDialog1, "COL_BANKS_F", sAlphabankFileID)
                If sResult = False Then XtraMessageBox.Show("Προσοχή το αρχείο Excel δεν αποθηκεύθηκε στην βάση", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never
        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never
        End Try

    End Sub
    Private Sub EUROBANK_TRANS()
        Dim sValRow As String, sDate As String, sCredit As Double
        Dim sbdgCode As String, sbdgID As String, sbdgNam As String, sApt As String, sAptAlternative As String
        Dim sAptID As String, sAptTTL As String
        Dim regex As New Regex("(\d{5})")
        Dim Cmd As SqlCommand, sdr As SqlDataReader
        Dim ItemsCorrect As Integer = 0, ItemsWrong As Integer = 0
        Dim sEurobankID As String, sEurobankFileID As String
        Try
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always
            ProgressBarControl1.EditValue = 0
            ProgressBarControl1.Properties.Step = 1
            ProgressBarControl1.Properties.PercentView = True
            ProgressBarControl1.Properties.Maximum = GridView5.DataRowCount - 1
            ProgressBarControl1.Properties.Minimum = 0
            lstLog.Items.Clear()
            Dim sSQL As New System.Text.StringBuilder
            sEurobankFileID = System.Guid.NewGuid.ToString
            ' Cmd = New SqlCommand("TRUNCATE TABLE EUROBANK", CNDB) : Cmd.ExecuteNonQuery()

            For i As Integer = 0 To GridView5.DataRowCount - 1
                If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then
                    If GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName) IsNot Nothing Then
                        sValRow = GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName).ToString()
                        If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then sDate = GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName).ToString()
                        sCredit = GridView5.GetRowCellValue(i, GridView5.Columns(2).FieldName)
                        sbdgCode = regex.Match(sValRow).ToString
                        Dim Pos As Integer = InStr(sValRow.Trim, sbdgCode)
                        sApt = sValRow.Substring(Pos + sbdgCode.Length - 1, sValRow.Length - Pos - (sbdgCode.Length - 1)).Replace(" ", "").Trim
                        sAptAlternative = ConvertCharToENGR(sApt)

                        If sCredit <> 0 Then
                            If sbdgCode.Length > 0 Then
                                Cmd = New SqlCommand("SELECT top 1 ID,Nam FROM BDG WHERE coalesce(old_Code,code)= " & toSQLValueS(sbdgCode), CNDB)
                                sdr = Cmd.ExecuteReader()
                                If (sdr.Read() = True) Then sbdgID = sdr.GetGuid(sdr.GetOrdinal("ID")).ToString : sbdgNam = sdr.GetString(sdr.GetOrdinal("Nam"))
                                sdr.Close()
                                Cmd = New SqlCommand("SELECT top 1 id,ttl FROM vw_APT WHERE coalesce(bdgoldCode,bdgcode)= " & toSQLValueS(sbdgCode) & " and (ttl = " & toSQLValueS(sApt) & " OR ttl = " & toSQLValueS(sAptAlternative) & ")", CNDB)
                                sdr = Cmd.ExecuteReader()
                                If (sdr.Read() = True) Then sAptID = sdr.GetGuid(sdr.GetOrdinal("id")).ToString : sAptTTL = sdr.GetString(sdr.GetOrdinal("ttl"))
                                sdr.Close()
                            End If
                            Try
                                'Εισαγωγή εγγραφών από Ecxel sthn Βάση
                                sEurobankID = System.Guid.NewGuid.ToString
                                sSQL.AppendLine("INSERT INTO EUROBANK (ID,reason,aptID,TTL,dtCreate,bdgID, bdgNam,bdgCode,credit,BankID,colBanksFID) VALUES( ")
                                sSQL.AppendLine(toSQLValueS(sEurobankID) & ",")
                                sSQL.AppendLine(toSQLValueS(sValRow) & ",")
                                sSQL.AppendLine(toSQLValueS(sAptID) & ",")
                                sSQL.AppendLine(toSQLValueS(sAptTTL) & ",")
                                If sDate.Length > 0 Then sSQL.AppendLine(toSQLValueS(CDate(sDate).ToString("yyyyMMdd")) & ",") Else sSQL.AppendLine("NULL,")
                                sSQL.AppendLine(toSQLValueS(sbdgID) & ",")
                                sSQL.AppendLine(toSQLValueS(sbdgNam) & ",")
                                sSQL.AppendLine(toSQLValueS(sbdgCode) & ",")
                                sSQL.AppendLine(toSQLValueS(sCredit, True) & ",")
                                sSQL.AppendLine(toSQLValueS("5875B070-AFBC-4773-9267-AF4EDF8150D4") & ",")
                                sSQL.AppendLine(toSQLValueS(sEurobankFileID) & ")")
                                Using oCmd As New SqlCommand(sSQL.ToString, CNDB)
                                    oCmd.ExecuteNonQuery()
                                End Using
                                lstLog.Items.Add("Η εγγραφή Καταχωρήθηκε με επιτυχία!-->" & sValRow)
                                lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(0)
                                lstLog.Items(lstLog.Items.Count - 1).Tag = sEurobankID
                                ItemsCorrect = ItemsCorrect + 1
                            Catch ex As Exception
                                lstLog.Items.Add(ex.Message.ToString.Replace(vbCrLf, ""))
                                lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(1)
                                ItemsWrong = ItemsWrong + 1
                            End Try
                            sSQL.Clear()
                            sbdgID = "" : sbdgNam = "" : sAptID = "" : sAptTTL = ""
                        End If
                    End If
                End If
                ProgressBarControl1.PerformStep()
                ProgressBarControl1.Update()
            Next i
            grdBANKS.DataSource = Nothing
            Me.EUROBANKTableAdapter.Fill(Me.Priamos_NETDataSet3.EUROBANK)
            grdBANKS.DataSource = Me.Priamos_NETDataSet3.EUROBANK
            grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
            LoadForms.RestoreLayoutFromXml(GridView5, "EUROBANK.xml")
            GridView5.BestFitColumns()
            lstLog.Items.Add("Καταχωρήθηκαν: " & ItemsCorrect & " Λάθοι: " & ItemsWrong)
            lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(2)
            If ItemsCorrect > 0 Then
                Dim sResult As Boolean = DBQ.InsertNewDataFiles(XtraOpenFileDialog1, "COL_BANKS_F", sEurobankFileID)
                If sResult = False Then XtraMessageBox.Show("Προσοχή το αρχείο Excel δεν αποθηκεύθηκε στην βάση", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never
        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never
        End Try

    End Sub
    Private Sub NBG_TRANS()
        Dim sValRow As String, sDate As String, sCredit As Double
        Dim sbdgCode As String, sbdgID As String, sbdgNam As String, sApt As String, sAptAlternative As String
        Dim sAptID As String, sAptTTL As String, sTransactionID As String
        Dim regex As New Regex("(\d{5})")
        Dim Cmd As SqlCommand, sdr As SqlDataReader
        Dim ItemsCorrect As Integer = 0, ItemsWrong As Integer = 0
        Dim sNbgID As String, sNbgFileID As String
        Try
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always
            ProgressBarControl1.EditValue = 0
            ProgressBarControl1.Properties.Step = 1
            ProgressBarControl1.Properties.PercentView = True
            ProgressBarControl1.Properties.Maximum = GridView5.DataRowCount - 1
            ProgressBarControl1.Properties.Minimum = 0
            lstLog.Items.Clear()
            Dim sSQL As New System.Text.StringBuilder
            'Cmd = New SqlCommand("TRUNCATE TABLE NBG", CNDB) : Cmd.ExecuteNonQuery()
            sNbgFileID = System.Guid.NewGuid.ToString

            For i As Integer = 0 To GridView5.DataRowCount - 1
                If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then

                    sValRow = GridView5.GetRowCellValue(i, GridView5.Columns(2).FieldName).ToString()
                    If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then sDate = GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName).ToString()
                    sCredit = GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName)
                    sbdgCode = regex.Match(sValRow).ToString
                    Dim Pos As Integer = InStr(sValRow.Trim, sbdgCode)
                    sApt = sValRow.Substring(Pos + sbdgCode.Length - 1, sValRow.Length - Pos - (sbdgCode.Length - 1)).Replace(" ", "").Trim
                    sAptAlternative = ConvertCharToENGR(sApt)
                    sTransactionID = GridView5.GetRowCellValue(i, GridView5.Columns(3).FieldName)

                    If sbdgCode.Length > 0 Then
                        Cmd = New SqlCommand("SELECT top 1 ID,Nam FROM BDG WHERE coalesce(old_Code,code)= " & toSQLValueS(sbdgCode), CNDB)
                        sdr = Cmd.ExecuteReader()
                        If (sdr.Read() = True) Then sbdgID = sdr.GetGuid(sdr.GetOrdinal("ID")).ToString : sbdgNam = sdr.GetString(sdr.GetOrdinal("Nam"))
                        sdr.Close()
                        Cmd = New SqlCommand("SELECT top 1 id,ttl FROM vw_APT WHERE coalesce(bdgoldCode,bdgcode)= " & toSQLValueS(sbdgCode) & " and (ttl = " & toSQLValueS(sApt) & " OR ttl = " & toSQLValueS(sAptAlternative) & ")", CNDB)
                        sdr = Cmd.ExecuteReader()
                        If (sdr.Read() = True) Then sAptID = sdr.GetGuid(sdr.GetOrdinal("id")).ToString : sAptTTL = sdr.GetString(sdr.GetOrdinal("ttl"))
                        sdr.Close()
                    End If
                    Try
                        sNbgID = System.Guid.NewGuid.ToString
                        'Εισαγωγή εγγραφών από Ecxel sthn Βάση
                        sSQL.AppendLine("INSERT INTO NBG (ID,TransactionID,reason,aptID,TTL,dtCreate,bdgID, bdgNam,bdgCode,credit,BankID,colBanksFID) VALUES( ")
                        sSQL.AppendLine(toSQLValueS(sNbgID) & ",")
                        sSQL.AppendLine(toSQLValueS(sTransactionID) & ",")
                        sSQL.AppendLine(toSQLValueS(sValRow) & ",")
                        sSQL.AppendLine(toSQLValueS(sAptID) & ",")
                        sSQL.AppendLine(toSQLValueS(sAptTTL) & ",")
                        If sDate.Length > 0 Then sSQL.AppendLine(toSQLValueS(CDate(sDate).ToString("yyyyMMdd")) & ",") Else sSQL.AppendLine("NULL,")
                        sSQL.AppendLine(toSQLValueS(sbdgID) & ",")
                        sSQL.AppendLine(toSQLValueS(sbdgNam) & ",")
                        sSQL.AppendLine(toSQLValueS(sbdgCode) & ",")
                        sSQL.AppendLine(toSQLValueS(sCredit, True) & ",")
                        sSQL.AppendLine(toSQLValueS("D390AC98-CCAC-416C-B406-A6B4C67BAF0B") & ",")
                        sSQL.AppendLine(toSQLValueS(sNbgFileID) & ")")
                        Using oCmd As New SqlCommand(sSQL.ToString, CNDB)
                            oCmd.ExecuteNonQuery()
                        End Using
                        lstLog.Items.Add("Η εγγραφή Καταχωρήθηκε με επιτυχία!-->" & sValRow)
                        lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(0)
                        lstLog.Items(lstLog.Items.Count - 1).Tag = sNbgID
                        ItemsCorrect = ItemsCorrect + 1
                    Catch ex As Exception
                        lstLog.Items.Add(ex.Message.ToString.Replace(vbCrLf, ""))
                        lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(1)
                        ItemsWrong = ItemsWrong + 1
                    End Try
                    sSQL.Clear()
                    sbdgID = "" : sbdgNam = "" : sAptID = "" : sAptTTL = ""
                End If
                ProgressBarControl1.PerformStep()
                ProgressBarControl1.Update()
            Next i
            grdBANKS.DataSource = Nothing
            Me.NBGTableAdapter.Fill(Me.Priamos_NETDataSet3.NBG)
            grdBANKS.DataSource = Me.Priamos_NETDataSet3.NBG
            grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
            LoadForms.RestoreLayoutFromXml(GridView5, "NBG.xml")
            GridView5.BestFitColumns()
            lstLog.Items.Add("Καταχωρήθηκαν: " & ItemsCorrect & " Λάθοι: " & ItemsWrong)
            lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(2)
            If ItemsCorrect > 0 Then
                Dim sResult As Boolean = DBQ.InsertNewDataFiles(XtraOpenFileDialog1, "COL_BANKS_F", sNbgFileID)
                If sResult = False Then XtraMessageBox.Show("Προσοχή το αρχείο Excel δεν αποθηκεύθηκε στην βάση", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never
        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never
        End Try

    End Sub
    Private Sub GridView5_ShownEditor(sender As Object, e As EventArgs) Handles GridView5.ShownEditor
        Dim view As ColumnView = DirectCast(sender, ColumnView)
        Try
            If GridView5.FocusedRowHandle < 0 Then Exit Sub
            Dim bdgID As String = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString()
            If view.FocusedColumn.FieldName = "aptID" And bdgID.Length > 0 Then
                Dim editor As LookUpEdit = CType(view.ActiveEditor, LookUpEdit)

                If bdgID.Length > 0 Then editor.Properties.DataSource = Me.Vw_APTTableAdapter.GetDataByBDGID(System.Guid.Parse(bdgID))

            ElseIf view.FocusedColumn.FieldName = "inhID" Then
                Dim editor As LookUpEdit = CType(view.ActiveEditor, LookUpEdit)

                Dim aptID As String = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "aptID").ToString()
                If bdgID.Length > 0 And aptID.Length > 0 Then editor.Properties.DataSource = Me.COL_PER_BDG_APTTableAdapter.GetData(System.Guid.Parse(bdgID), System.Guid.Parse(aptID))
            End If
        Catch ex As Exception
            'XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try
    End Sub

    Private Sub GridView5_CustomDrawCell(sender As Object, e As RowCellCustomDrawEventArgs) Handles GridView5.CustomDrawCell
        Dim GRD5 As GridView = sender
        If GRD5 Is Nothing Then Exit Sub
        If e.CellValue Is Nothing Then Exit Sub
        If e.Column.FieldName = "aptID" Then e.DisplayText = GRD5.GetRowCellValue(e.RowHandle, "ttl").ToString()
        If e.Column.FieldName = "inhID" Then e.DisplayText = GRD5.GetRowCellValue(e.RowHandle, "completeDate").ToString()
    End Sub

    Private Sub RepositoryItemLookUpEdit1_EditValueChanged(sender As Object, e As EventArgs) Handles RepApt.EditValueChanged
        Dim editor As DevExpress.XtraEditors.LookUpEdit = TryCast(sender, DevExpress.XtraEditors.LookUpEdit)
        Dim ttl As String
        ttl = editor.GetColumnValue("ttl").ToString
        GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "ttl", ttl)
    End Sub
    Private Sub RepColPerBdgApt_EditValueChanged(sender As Object, e As EventArgs) Handles RepColPerBdgApt.EditValueChanged
        Dim editor As DevExpress.XtraEditors.LookUpEdit = TryCast(sender, DevExpress.XtraEditors.LookUpEdit)
        Dim completeDate As String
        completeDate = editor.GetColumnValue("completeDate").ToString
        GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "completeDate", completeDate)
    End Sub
    Private Sub RepBdg_EditValueChanged(sender As Object, e As EventArgs) Handles RepBdg.EditValueChanged
        Dim editor As DevExpress.XtraEditors.LookUpEdit = TryCast(sender, DevExpress.XtraEditors.LookUpEdit)
        Dim bdgCode As String
        bdgCode = editor.GetColumnValue("old_code").ToString
        If bdgCode.Length = 0 Then editor.GetColumnValue("code").ToString()
        GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "bdgCode", bdgCode)
    End Sub
    Private Sub GridView5_CustomRowCellEdit(sender As Object, e As CustomRowCellEditEventArgs) Handles GridView5.CustomRowCellEdit
        If e.RowHandle <> grdBANKS.NewItemRowHandle AndAlso e.Column.FieldName = "imageCell" Then
            If GridView5.GetRowCellValue(e.RowHandle, "ttl") Is Nothing Then Exit Sub
            Dim aptID As String = GridView5.GetRowCellValue(e.RowHandle, "ttl").ToString()
            If aptID.Length > 0 Then
                e.RepositoryItem = txtImageCorrect
                GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "imageCell", "Matched")
            Else
                e.RepositoryItem = txtImageError
                GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "imageCell", "Not Matched")
            End If
        End If

    End Sub

    Private Sub cmdExit_Click(sender As Object, e As EventArgs) Handles cmdExit.Click
        Me.Close()
    End Sub

    Private Sub GridView5_PopupMenuShowing(sender As Object, e As PopupMenuShowingEventArgs) Handles GridView5.PopupMenuShowing
        If e.MenuType = GridMenuType.Column Then
            Select Case BankMode
                Case 1 : LoadForms.PopupMenuShow(e, GridView5, "PIREOS.xml", "PIREOS")
                Case 2 : LoadForms.PopupMenuShow(e, GridView5, "ALPHA.xml", "ALPHA")
                Case 3 : LoadForms.PopupMenuShow(e, GridView5, "EUROBANK.xml", "EUROBANK")
                Case 4 : LoadForms.PopupMenuShow(e, GridView5, "NBG.xml", "NBG")
                Case 5 : LoadForms.PopupMenuShow(e, GridView5, "ALLBANKS.xml", "NBG")
            End Select

        End If
    End Sub

    Private Sub ColInh()
        Try
            Dim sBdgID As String, sAptID As String, sInhID As String, dtcredit As String, sBankID As String
            Dim credit As Decimal, sBankDepositDate As Date, ColBanksID As String, completed As Boolean
            completed = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "Completed")
            If completed = True Then
                XtraMessageBox.Show("Η είσπραξη είναι ήδη ολοκληρωμένη.", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
                Exit Sub
            End If
            sBdgID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString.ToUpper
            sAptID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "aptID").ToString.ToUpper
            sInhID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "inhID").ToString.ToUpper
            credit = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "credit")
            ColBanksID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "ID").ToString.ToUpper
            sBankDepositDate = Date.Parse(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "dtCreate").ToString)
            dtcredit = toSQLValueS(Date.Now.ToString("yyyyMMdd"))
            Select Case BankMode
                Case 1 : sBankID = "92B4B01C-0F8C-4A02-982A-149C02F42C32"
                Case 2 : sBankID = "019A838C-4411-48B7-A6D0-D4F33B78E619"
                Case 3 : sBankID = "5875B070-AFBC-4773-9267-AF4EDF8150D4"
                Case 4 : sBankID = "D390AC98-CCAC-416C-B406-A6B4C67BAF0B"
                Case 5
                    Select Case GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "BankName")
                        Case "ΠΕΙΡΑΙΩΣ" : sBankID = "92B4B01C-0F8C-4A02-982A-149C02F42C32"
                        Case "ALPHA BANK" : sBankID = "019A838C-4411-48B7-A6D0-D4F33B78E619"
                        Case "EUROBANK" : sBankID = "5875B070-AFBC-4773-9267-AF4EDF8150D4"
                        Case "ΕΘΝΙΚΗ" : sBankID = "D390AC98-CCAC-416C-B406-A6B4C67BAF0B"
                    End Select
                    sFileName = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "filename").ToString
            End Select
            If sInhID = "" Or sBdgID = "" Or sAptID = "" Then
                XtraMessageBox.Show("Δεν έχουν συμπληρωθεί όλα τα στοιχεία για να κάνετε είσπραξη", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
                Exit Sub
            Else
                Using oCmd As New SqlCommand("col_Calculate", CNDB)
                    oCmd.CommandType = CommandType.StoredProcedure
                    oCmd.Parameters.AddWithValue("@debitusrID", "CC93EEFB-B8B6-470F-983D-3604E67C6E1C") ' ΧΡΗΣΤΗΣ ΤΡΑΠΕΖΕΣ
                    oCmd.Parameters.AddWithValue("@bdgID", sBdgID)
                    oCmd.Parameters.AddWithValue("@aptID", sAptID)
                    oCmd.Parameters.AddWithValue("@inhID", sInhID)
                    oCmd.Parameters.AddWithValue("@Givencredit", credit)
                    oCmd.Parameters.AddWithValue("@modifiedBy", UserProps.ID.ToString.ToUpper)
                    oCmd.Parameters.AddWithValue("@ColMethodID", "F34B402C-ADD8-48E7-85A9-FFDF7DAED582") ' ΤΡΟΠΟΣ ΠΛΗΡΩΜΗΣ ΤΡΑΠΕΖΑ
                    oCmd.Parameters.AddWithValue("@TenantOwner", 2)
                    oCmd.Parameters.AddWithValue("@Agreed", 0)
                    oCmd.Parameters.AddWithValue("@ComeFrom", 1)
                    oCmd.Parameters.AddWithValue("@BankID", sBankID)
                    oCmd.Parameters.AddWithValue("@BankFileName", sFileName)
                    oCmd.Parameters.AddWithValue("@BankDepositDate", sBankDepositDate)
                    oCmd.Parameters.AddWithValue("@ColBanksID", ColBanksID)
                    oCmd.ExecuteNonQuery()
                    GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "Completed", "True")
                    UpdateColBanks()
                    XtraMessageBox.Show("Η Είσπραξη ολοκληρώθηκε με επιτυχία", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Information)
                End Using
            End If
        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try
    End Sub

    Private Sub RepColBtn_Click(sender As Object, e As EventArgs) Handles RepColBtn.Click
        ColInh()
    End Sub

    Private Sub GridView5_DoubleClick(sender As Object, e As EventArgs) Handles GridView5.DoubleClick
        Dim sBdgID As String
        sBdgID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString.ToUpper
        If sBdgID <> "" Then
            Dim fBDG As frmBDG = New frmBDG()
            fBDG.Text = "Πολυκατοικίες"
            fBDG.ID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString
            fBDG.MdiParent = frmMain
            fBDG.Mode = FormMode.EditRecord
            fBDG.Scroller = GridView5
            fBDG.FormScroller = Me
            fBDG.Show()

        End If
    End Sub



    Private Sub lstLog_DoubleClick(sender As Object, e As EventArgs) Handles lstLog.DoubleClick
        GridView5.ActiveFilterString = "[ID] = {" & lstLog.Items(lstLog.SelectedIndex).Tag & "}"
    End Sub

    Private Sub NavPireos_ElementClick(sender As Object, e As NavElementEventArgs) Handles NavPireos.ElementClick
        BankMode = 1 : FilesSelection()
    End Sub

    Private Sub NavAlpha_ElementClick(sender As Object, e As NavElementEventArgs) Handles NavAlpha.ElementClick
        BankMode = 2 : FilesSelection()
    End Sub

    Private Sub NavEurobank_ElementClick(sender As Object, e As NavElementEventArgs) Handles NavEurobank.ElementClick
        BankMode = 3 : FilesSelection()
    End Sub

    Private Sub NavNbg_ElementClick(sender As Object, e As NavElementEventArgs) Handles NavNbg.ElementClick
        BankMode = 4 : FilesSelection()
    End Sub

    Private Sub RepColExcel_Click(sender As Object, e As EventArgs) Handles RepColExcel.Click
        Dim sFName As String
        If GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "colBanksFID") Is DBNull.Value Then Exit Sub

        Dim b() As Byte = GetFile(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "colBanksFID").ToString, sFName)
        Try
            Dim fs As IO.FileStream = New IO.FileStream(ProgProps.ServerPath & sFName, IO.FileMode.Create)
            fs.Write(b, 0, b.Length)
            fs.Close()
            ShellExecute(ProgProps.ServerPath & sFName)
        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try
    End Sub
    Private Function GetFile(ByVal sRowID As String, ByRef sFName As String) As Byte()
        Dim sSQL As String
        Dim cmd As SqlCommand
        Dim sdr As SqlDataReader
        Dim bytes As Byte()

        sSQL = "Select  filename,files From COL_BANKS_F WHERE ID = " & toSQLValueS(sRowID)
        cmd = New SqlCommand(sSQL, CNDB) : sdr = cmd.ExecuteReader()
        If sdr.Read() = True Then
            bytes = DirectCast(sdr("files"), Byte())
            sFName = sdr("filename")
            Return bytes
        End If
        sdr.Close()

    End Function
    Private Sub ShellExecute(ByVal File As String)
        Dim myProcess As New Process
        myProcess.StartInfo.FileName = File
        myProcess.StartInfo.UseShellExecute = True
        myProcess.StartInfo.RedirectStandardOutput = False
        myProcess.Start()
        myProcess.Dispose()
        myProcess.Close()
    End Sub

    Private Sub NavAllBanks_ElementClick(sender As Object, e As NavElementEventArgs) Handles NavAllBanks.ElementClick
        BankMode = 5
        grdBANKS.DataSource = Nothing
        Me.Vw_COL_ALL_BANKSTableAdapter.Fill(Me.Priamos_NETDataSet3.vw_COL_ALL_BANKS)
        grdBANKS.DataSource = Me.Priamos_NETDataSet3.vw_COL_ALL_BANKS
        grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
        LoadForms.RestoreLayoutFromXml(GridView5, "ALLBANKS.xml")
        GridView5.BestFitColumns()
    End Sub
    Private Sub DeleteBatchRecords()
        Dim sSQL As String
        Dim selectedRowHandles As Int32() = GridView5.GetSelectedRows()
        Dim I As Integer
        Dim ItemsCorrect As Integer = 0, ItemsWrong As Integer = 0
        Try
            If selectedRowHandles.Length = 0 Then Exit Sub
            If XtraMessageBox.Show("Θέλετε να διαγραφούν η τρέχουσες εγγραφές?", "Dreamy Kitchen CRM", MessageBoxButtons.YesNo, MessageBoxIcon.Question) = vbNo Then Exit Sub
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Always
            ProgressBarControl1.EditValue = 0
            ProgressBarControl1.Properties.Step = 1
            ProgressBarControl1.Properties.PercentView = True
            ProgressBarControl1.Properties.Maximum = selectedRowHandles.Length - 1
            ProgressBarControl1.Properties.Minimum = 0
            lstLog.Items.Clear()

            For I = 0 To selectedRowHandles.Length - 1
                Dim selectedRowHandle As Int32 = selectedRowHandles(I)

                'If GridView5.GetRowCellValue(selectedRowHandle, "ID") = Nothing Then Exit Sub
                If GridView5.GetRowCellValue(selectedRowHandle, "Completed") = "False" Then

                    Select Case BankMode
                        Case 1 : sSQL = "DELETE FROM PIREOS WHERE ID = '" & GridView5.GetRowCellValue(selectedRowHandle, "ID").ToString & "'"
                        Case 2 : sSQL = "DELETE FROM ALPHA WHERE ID = '" & GridView5.GetRowCellValue(selectedRowHandle, "ID").ToString & "'"
                        Case 3 : sSQL = "DELETE FROM EUROBANK WHERE ID = '" & GridView5.GetRowCellValue(selectedRowHandle, "ID").ToString & "'"
                        Case 4 : sSQL = "DELETE FROM NBG WHERE ID = '" & GridView5.GetRowCellValue(selectedRowHandle, "ID").ToString & "'"
                        Case 5
                            Select Case GridView5.GetRowCellValue(selectedRowHandle, "BankName")
                                Case "ΠΕΙΡΑΙΩΣ" : sSQL = "DELETE FROM PIREOS WHERE ID = '" & GridView5.GetRowCellValue(selectedRowHandle, "ID").ToString & "'"
                                Case "ALPHA BANK" : sSQL = "DELETE FROM ALPHA WHERE ID = '" & GridView5.GetRowCellValue(selectedRowHandle, "ID").ToString & "'"
                                Case "EUROBANK" : sSQL = "DELETE FROM EUROBANK WHERE ID = '" & GridView5.GetRowCellValue(selectedRowHandle, "ID").ToString & "'"
                                Case "ΕΘΝΙΚΗ" : sSQL = "DELETE FROM NBG WHERE ID = '" & GridView5.GetRowCellValue(selectedRowHandle, "ID").ToString & "'"
                            End Select
                    End Select
                    Try

                        Using oCmd As New SqlCommand(sSQL, CNDB)
                            oCmd.ExecuteNonQuery()
                        End Using

                        lstLog.Items.Add("Η εγγραφή Διαγράφηκε με επιτυχία!-->" & GridView5.GetRowCellValue(selectedRowHandle, "reason").ToString)
                        lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(0)
                        ItemsCorrect = ItemsCorrect + 1
                    Catch ex As Exception
                        lstLog.Items.Add(ex.Message.ToString.Replace(vbCrLf, ""))
                        lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(1)
                        ItemsWrong = ItemsWrong + 1
                    End Try
                Else
                    ItemsWrong = ItemsWrong + 1
                    lstLog.Items.Add("Η εγγραφή είναι ολοκληρωμένη. Δεν μπορεί να γίνει διαγραφή!-->" & GridView5.GetRowCellValue(selectedRowHandle, "reason").ToString)
                    lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(1)
                End If
                ProgressBarControl1.PerformStep()
                ProgressBarControl1.Update()
            Next I
            grdBANKS.DataSource = Nothing
            Select Case BankMode
                Case 1
                    Me.PIREOSTableAdapter.Fill(Me.Priamos_NETDataSet3.PIREOS)
                    grdBANKS.DataSource = Me.Priamos_NETDataSet3.PIREOS
                    grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                    LoadForms.RestoreLayoutFromXml(GridView5, "PIREOS.xml")
                Case 2
                    Me.ALPHATableAdapter.Fill(Me.Priamos_NETDataSet3.ALPHA)
                    grdBANKS.DataSource = Me.Priamos_NETDataSet3.ALPHA
                    grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                    LoadForms.RestoreLayoutFromXml(GridView5, "ALPHA.xml")
                Case 3
                    Me.EUROBANKTableAdapter.Fill(Me.Priamos_NETDataSet3.EUROBANK)
                    grdBANKS.DataSource = Me.Priamos_NETDataSet3.EUROBANK
                    grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                    LoadForms.RestoreLayoutFromXml(GridView5, "EUROBANK.xml")
                Case 4
                    Me.NBGTableAdapter.Fill(Me.Priamos_NETDataSet3.NBG)
                    grdBANKS.DataSource = Me.Priamos_NETDataSet3.NBG
                    grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                    LoadForms.RestoreLayoutFromXml(GridView5, "NBG.xml")
            End Select
            GridView5.BestFitColumns()
            lstLog.Items.Add("Διαγράφηκαν: " & ItemsCorrect & " Λάθοι: " & ItemsWrong)
            lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(2)
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never

        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            LayoutControlItem8.Visibility = DevExpress.XtraLayout.Utils.LayoutVisibility.Never
        End Try
    End Sub

    Private Sub cmdDelete_Click(sender As Object, e As EventArgs) Handles cmdDelete.Click
        DeleteBatchRecords()
    End Sub


    Private Sub GridView5_CellValueChanged(sender As Object, e As CellValueChangedEventArgs) Handles GridView5.CellValueChanged

        If e.Value Is Nothing Then Exit Sub
        If e.Column.Name = "colCompleted" Then Exit Sub


        UpdateColBanks()
        'If UserProps.ID.ToString.ToUpper <> "E2BF15AC-19E3-498F-9459-1821B3898C76" And UserProps.ID.ToString.ToUpper <> "E9CEFD11-47C0-4796-A46B-BC41C4C3606B" And e.Column.FieldName = "Completed" Then
        '    XtraMessageBox.Show("Η δυνατότητα ενημέρωσης έχει απενεργοποιηθεί", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Warning)
        '    Exit Sub
        'End If


    End Sub
    Private Sub UpdateColBanks()
        Dim sSQL As New StringBuilder
        Try

            'If UserProps.ID.ToString.ToUpper <> "E2BF15AC-19E3-498F-9459-1821B3898C76" And UserProps.ID.ToString.ToUpper <> "E9CEFD11-47C0-4796-A46B-BC41C4C3606B" And e.Column.FieldName = "Completed" Then
            '    XtraMessageBox.Show("Η δυνατότητα ενημέρωσης έχει απενεργοποιηθεί", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Warning)
            '    Exit Sub
            'End If


            sSQL.Clear()
            Select Case BankMode
                Case 1 : sSQL.AppendLine("UPDATE PIREOS SET ")
                Case 2 : sSQL.AppendLine("UPDATE ALPHA SET ")
                Case 3 : sSQL.AppendLine("UPDATE EUROBANK SET ")
                Case 4 : sSQL.AppendLine("UPDATE NBG SET ")
                Case 5
                    Select Case GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "BankName")
                        Case "ΠΕΙΡΑΙΩΣ" : sSQL.AppendLine("UPDATE PIREOS SET ")
                        Case "ALPHA BANK" : sSQL.AppendLine("UPDATE ALPHA SET ")
                        Case "EUROBANK" : sSQL.AppendLine("UPDATE EUROBANK SET ")
                        Case "ΕΘΝΙΚΗ" : sSQL.AppendLine("UPDATE NBG SET ")
                    End Select
            End Select

            sSQL.AppendLine("bdgID = " & toSQLValueS(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString) & ",")
            sSQL.AppendLine("bdgCode = " & toSQLValueS(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgCode").ToString) & ",")
            sSQL.AppendLine("aptID = " & toSQLValueS(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "aptID").ToString) & ",")
            sSQL.AppendLine("ttl= " & toSQLValueS(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "ttl").ToString) & ",")
            sSQL.AppendLine("completeDate= " & toSQLValueS(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "completeDate").ToString) & ",")
            sSQL.AppendLine("inhID= " & toSQLValueS(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "inhID").ToString) & ",")
            sSQL.AppendLine("Completed= " & toSQLValueS(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "Completed").ToString))
            sSQL.AppendLine("WHERE ID = " & toSQLValueS(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "ID").ToString))
            Using oCmd As New SqlCommand(sSQL.ToString, CNDB)
                oCmd.ExecuteNonQuery()
            End Using
            lstLog.Items.Add("Η εγγραφή Ενημερώθηκε Επιτυχώς!")
            lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(2)
        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            lstLog.Items.Add("Η εγγραφή δεν ενημερώθηκε: " & ex.Message)
            lstLog.Items(lstLog.Items.Count - 1).ImageOptions.Image = ImageCollection1.Images.Item(1)
        End Try

    End Sub

    Friend Sub RepApt_Changed(sender As Object, e As EventArgs)
        UpdateColBanks()
    End Sub
    Friend Sub RepColPerBdgApt_Changed(sender As Object, e As EventArgs)
        UpdateColBanks()
    End Sub
    Private Sub RepBdg_ButtonClick(sender As Object, e As ButtonPressedEventArgs) Handles RepBdg.ButtonClick
        Select Case e.Button.Index
            Case 1
                GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "bdgID", "")
                GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "bdgCode", "")
            Case 2
                Dim sBdgID As String
                sBdgID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString.ToUpper
                If sBdgID <> "" Then
                    Dim fBDG As frmBDG = New frmBDG()
                    fBDG.Text = "Πολυκατοικίες"
                    fBDG.ID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString
                    fBDG.MdiParent = frmMain
                    fBDG.Mode = FormMode.EditRecord
                    fBDG.Scroller = GridView5
                    fBDG.FormScroller = Me
                    fBDG.Show()
                End If
            Case 3
                Dim form As frmCollections = New frmCollections()
                Dim sBdgID As String
                sBdgID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString.ToUpper
                If sBdgID <> "" Then
                    form.Text = "Είσπραξεις Κοινοχρήστων"
                    form.BDGID = sBdgID
                    form.MdiParent = frmMain
                    form.Show()
                End If

        End Select
    End Sub

    Private Sub RepColPerBdgApt_ButtonClick(sender As Object, e As ButtonPressedEventArgs) Handles RepColPerBdgApt.ButtonClick
        If e.Button.Index = 1 Then
            GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "inhID", "")
            GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "completeDate", "")
        End If
    End Sub

    Private Sub RepositoryItemLookUpEdit1_ButtonClick(sender As Object, e As ButtonPressedEventArgs) Handles RepApt.ButtonClick
        If e.Button.Index = 1 Then
            GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "aptID", "")
            GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "ttl", "")
        End If
    End Sub

    Private Sub GridView5_ValidatingEditor(sender As Object, e As BaseContainerValidateEditorEventArgs) Handles GridView5.ValidatingEditor
        Dim Cmd As SqlCommand, sdr As SqlDataReader
        If sender.FocusedColumn.FieldName <> "Completed" Then Exit Sub
        Cmd = New SqlCommand("SELECT top 1 colBanksID FROM COL_D WHERE colBanksID= " & toSQLValueS(GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "ID").ToString), CNDB)
        sdr = Cmd.ExecuteReader()
        Dim sColBankID As String = ""
        If (sdr.Read() = True) Then sColBankID = sdr.GetGuid(sdr.GetOrdinal("ColBanksID")).ToString
        sdr.Close()
        If sColBankID.Length > 0 Then
            e.ErrorText = "Δεν μπορείτε την είσπραξη να την κάνετε μη Ολοκληρωμένη γιατί έχουν γίνει εξοφλήσεις"
            e.Valid = False
        Else
            UpdateColBanks()
        End If
    End Sub
End Class