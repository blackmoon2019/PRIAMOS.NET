


Imports System.ComponentModel
Imports System.Data.SqlClient
Imports System.Text.RegularExpressions
Imports DevExpress.Utils
Imports DevExpress.XtraEditors
Imports DevExpress.XtraEditors.Repository
Imports DevExpress.XtraGrid.Columns
Imports DevExpress.XtraGrid.Views.Base
Imports DevExpress.XtraGrid.Views.Grid

Public Class frmBankCollectionInsert
    Private LoadForms As New FormLoader
    Private BankMode As Integer
    Sub New()

        InitializeComponent()
        ' This line of code is generated by Data Source Configuration Wizard
        ' Fill the ExcelDataSource
    End Sub


    Private Sub frmBankCollectionInsert_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        'TODO: This line of code loads data into the 'Priamos_NETDataSet32.NBG' table. You can move, or remove it, as needed.
        Me.NBGTableAdapter.Fill(Me.Priamos_NETDataSet32.NBG)
        'TODO: This line of code loads data into the 'Priamos_NETDataSet3.EUROBANK' table. You can move, or remove it, as needed.
        Me.EUROBANKTableAdapter.Fill(Me.Priamos_NETDataSet3.EUROBANK)
        'TODO: This line of code loads data into the 'Priamos_NETDataSet31.ALPHA' table. You can move, or remove it, as needed.
        Me.ALPHATableAdapter.Fill(Me.Priamos_NETDataSet31.ALPHA)
        'TODO: This line of code loads data into the 'Priamos_NETDataSet31.PIREOS' table. You can move, or remove it, as needed.
        ' Φορτώνω ένα απόλα τα XML. Δεν με ενδιαφέρει ποιο. Για να έχω την μορφοποίηση
        LoadForms.RestoreLayoutFromXml(GridView5, "PIREOS.xml")
        grdBANKS.DataSource = Nothing
        Me.CenterToScreen()

    End Sub

    Private Sub frmBankCollectionInsert_Resize(sender As Object, e As EventArgs) Handles Me.Resize
        If Me.WindowState = FormWindowState.Maximized Then frmMain.XtraTabbedMdiManager1.Dock(Me, frmMain.XtraTabbedMdiManager1)
    End Sub

    Private Sub cmdPireos_Click(sender As Object, e As EventArgs) Handles cmdPireos.Click
        BankMode = 1 : FilesSelection()
    End Sub

    Private Sub cmdAlpha_Click(sender As Object, e As EventArgs) Handles cmdAlpha.Click
        BankMode = 2 : FilesSelection()
    End Sub

    Private Sub cmdEurobank_Click(sender As Object, e As EventArgs) Handles cmdEurobank.Click
        BankMode = 3 : FilesSelection()
    End Sub

    Private Sub cmdNbg_Click(sender As Object, e As EventArgs) Handles cmdNbg.Click
        BankMode = 4 : FilesSelection()
    End Sub
    Private Sub FilesSelection()
        Try
            Select Case BankMode
                Case 1, 4 : XtraOpenFileDialog1.Filter = "Excel files (*.xlsx)|*.xlsx|All files (*.*)|*.*"
                Case 2, 3 : XtraOpenFileDialog1.Filter = "CSV files (*.csv)|*.csv|All files (*.*)|*.*"
            End Select
            XtraOpenFileDialog1.FilterIndex = 1
            XtraOpenFileDialog1.InitialDirectory = Application.ExecutablePath
            XtraOpenFileDialog1.Title = "Open File"
            XtraOpenFileDialog1.CheckFileExists = False
            XtraOpenFileDialog1.Multiselect = False
            Dim result As DialogResult = XtraOpenFileDialog1.ShowDialog()
            If result = DialogResult.OK Then
                Select Case BankMode
                    Case 1
                        PIREOS.FileName = XtraOpenFileDialog1.FileName
                        PIREOS.Fill() : GridView5.Columns.Clear()
                        grdBANKS.DataSource = Nothing : PIREOS.Fill() : grdBANKS.DataSource = PIREOS
                        grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                        GridView5.Columns(0).Caption = "Αιτιολογία"
                        GridView5.Columns(1).Caption = "Ημερ/νία Καταχώρησης"
                        GridView5.Columns(2).Caption = "Ποσό"
                        PIREOS_TRANS()
                    Case 2
                        ALPHA.FileName = XtraOpenFileDialog1.FileName
                        ALPHA.Fill() : GridView5.Columns.Clear()
                        grdBANKS.DataSource = Nothing : ALPHA.Fill() : grdBANKS.DataSource = ALPHA
                        grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                        GridView5.Columns(0).Caption = "Ημερ/νία Καταχώρησης"
                        GridView5.Columns(1).Caption = "Αιτιολογία"
                        GridView5.Columns(2).Caption = "Ποσό"
                        ALPHA_TRANS()
                    Case 3
                        EUROBANK.FileName = XtraOpenFileDialog1.FileName
                        EUROBANK.Fill() : GridView5.Columns.Clear()
                        grdBANKS.DataSource = Nothing : EUROBANK.Fill() : grdBANKS.DataSource = EUROBANK
                        grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                        GridView5.Columns(0).Caption = "Ημερ/νία Καταχώρησης"
                        GridView5.Columns(1).Caption = "Αιτιολογία"
                        GridView5.Columns(2).Caption = "Ποσό"
                        EUROBANK_TRANS()
                    Case 4
                        NBG.FileName = XtraOpenFileDialog1.FileName
                        NBG.Fill() : GridView5.Columns.Clear()
                        grdBANKS.DataSource = Nothing : NBG.Fill() : grdBANKS.DataSource = NBG
                        grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
                        GridView5.Columns(0).Caption = "Ημερ/νία Καταχώρησης"
                        GridView5.Columns(1).Caption = "Ποσό"
                        GridView5.Columns(2).Caption = "Αιτιολογία"
                        NBG_TRANS()
                End Select
            End If
            GridView5.BestFitColumns()

        Catch ex As DevExpress.DataAccess.Excel.InvalidWorksheetNameValidationException
            Select Case BankMode
                Case 1 : XtraMessageBox.Show("Το excel που επιλέξατε δεν ανήκει στην τράπεζα Πειραώς", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
                Case 2 : XtraMessageBox.Show("Το excel που επιλέξατε δεν ανήκει στην τράπεζα Alpha", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
                Case 3 : XtraMessageBox.Show("Το excel που επιλέξατε δεν ανήκει στην τράπεζα Eurobank", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
                Case 4 : XtraMessageBox.Show("Το excel που επιλέξατε δεν ανήκει στην τράπεζα Εθνική", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            End Select

        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub
    Private Sub PIREOS_TRANS()
        Dim sValRow As String, sDate As String, sCredit As Double
        Dim sbdgCode As String, sbdgID As String, sbdgNam As String
        Dim sAptID As String, sAptTTL As String
        Dim regex As New Regex("(\d{5})")
        Dim Cmd As SqlCommand, sdr As SqlDataReader
        Try
            ProgressBarControl1.EditValue = 0
            ProgressBarControl1.Properties.Step = 1
            ProgressBarControl1.Properties.PercentView = True
            ProgressBarControl1.Properties.Maximum = GridView5.DataRowCount - 1
            ProgressBarControl1.Properties.Minimum = 0
            Dim sSQL As New System.Text.StringBuilder
            Cmd = New SqlCommand("TRUNCATE TABLE PIREOS", CNDB) : Cmd.ExecuteNonQuery()

            For i As Integer = 0 To GridView5.DataRowCount - 1
                If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then

                    sValRow = GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName).ToString()
                    If GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName) IsNot Nothing Then sDate = GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName).ToString()
                    sCredit = GridView5.GetRowCellValue(i, GridView5.Columns(2).FieldName)
                    sbdgCode = regex.Match(sValRow).ToString

                    If sbdgCode.Length > 0 Then
                        Cmd = New SqlCommand("SELECT top 1 ID,Nam FROM BDG WHERE coalesce(old_Code,code)= " & toSQLValueS(sbdgCode), CNDB)
                        sdr = Cmd.ExecuteReader()
                        If (sdr.Read() = True) Then sbdgID = sdr.GetGuid(sdr.GetOrdinal("ID")).ToString : sbdgNam = sdr.GetString(sdr.GetOrdinal("Nam"))
                        sdr.Close()
                        Cmd = New SqlCommand("SELECT top 1 id,ttl FROM vw_APT WHERE coalesce(bdgoldCode,bdgcode)= " & toSQLValueS(sbdgCode) & " and ttl = " & toSQLValueS(sValRow.Substring(sbdgCode.Length, 10).Trim), CNDB)
                        sdr = Cmd.ExecuteReader()
                        If (sdr.Read() = True) Then sAptID = sdr.GetGuid(sdr.GetOrdinal("id")).ToString : sAptTTL = sdr.GetString(sdr.GetOrdinal("ttl"))
                        sdr.Close()
                        'Εισαγωγή εγγραφών από Ecxel sthn Βάση
                        sSQL.AppendLine("INSERT INTO PIREOS (reason,aptID,TTL,dtCreate,bdgID, bdgNam,bdgCode,credit) VALUES( ")
                        sSQL.AppendLine(toSQLValueS(sValRow) & ",")
                        sSQL.AppendLine(toSQLValueS(sAptID) & ",")
                        sSQL.AppendLine(toSQLValueS(sAptTTL) & ",")
                        If sDate.Length > 0 Then sSQL.AppendLine(toSQLValueS(CDate(sDate).ToString("yyyyMMdd")) & ",") Else sSQL.AppendLine("NULL,")
                        sSQL.AppendLine(toSQLValueS(sbdgID) & ",")
                        sSQL.AppendLine(toSQLValueS(sbdgNam) & ",")
                        sSQL.AppendLine(toSQLValueS(sbdgCode) & ",")
                        sSQL.AppendLine(toSQLValueS(sCredit, True) & ")")
                        Using oCmd As New SqlCommand(sSQL.ToString, CNDB)
                            oCmd.ExecuteNonQuery()
                        End Using
                        sSQL.Clear()
                        sbdgID = "" : sbdgNam = "" : sAptID = "" : sAptTTL = ""
                    End If
                End If
                ProgressBarControl1.PerformStep()
                ProgressBarControl1.Update()
            Next i
            grdBANKS.DataSource = Nothing
            Me.PIREOSTableAdapter.Fill(Me.Priamos_NETDataSet3.PIREOS)
            grdBANKS.DataSource = Me.Priamos_NETDataSet3.PIREOS
            grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
            GridView5.RestoreLayoutFromXml(Application.StartupPath & "\DSGNS\DEF\PIREOS.xml", OptionsLayoutBase.FullLayout)
            GridView5.BestFitColumns()

        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub
    Private Sub ALPHA_TRANS()
        Dim sValRow As String, sDate As String, sCredit As Double
        Dim sbdgCode As String, sbdgID As String, sbdgNam As String
        Dim sAptID As String, sAptTTL As String
        Dim regex As New Regex("(\d{5})")
        Dim Cmd As SqlCommand, sdr As SqlDataReader
        Try
            ProgressBarControl1.EditValue = 0
            ProgressBarControl1.Properties.Step = 1
            ProgressBarControl1.Properties.PercentView = True
            ProgressBarControl1.Properties.Maximum = GridView5.DataRowCount - 1
            ProgressBarControl1.Properties.Minimum = 0
            Dim sSQL As New System.Text.StringBuilder
            Cmd = New SqlCommand("TRUNCATE TABLE ALPHA", CNDB) : Cmd.ExecuteNonQuery()

            For i As Integer = 0 To GridView5.DataRowCount - 1
                If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then
                    If GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName) IsNot Nothing Then
                        sValRow = GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName).ToString()
                        If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then sDate = GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName).ToString()
                        sCredit = GridView5.GetRowCellValue(i, GridView5.Columns(2).FieldName)
                        sbdgCode = regex.Match(sValRow).ToString
                        If sCredit <> 0 Then
                            If sbdgCode.Length > 0 Then
                                Cmd = New SqlCommand("SELECT top 1 ID,Nam FROM BDG WHERE coalesce(old_Code,code)= " & toSQLValueS(sbdgCode), CNDB)
                                sdr = Cmd.ExecuteReader()
                                If (sdr.Read() = True) Then sbdgID = sdr.GetGuid(sdr.GetOrdinal("ID")).ToString : sbdgNam = sdr.GetString(sdr.GetOrdinal("Nam"))
                                sdr.Close()
                                Cmd = New SqlCommand("SELECT top 1 id,ttl FROM vw_APT WHERE coalesce(bdgoldCode,bdgcode)= " & toSQLValueS(sbdgCode) & " and ttl = " &
                                                        toSQLValueS(sValRow.Substring(sbdgCode.Length, sValRow.Length - sbdgCode.Length).Trim), CNDB)
                                sdr = Cmd.ExecuteReader()
                                If (sdr.Read() = True) Then sAptID = sdr.GetGuid(sdr.GetOrdinal("id")).ToString : sAptTTL = sdr.GetString(sdr.GetOrdinal("ttl"))
                                sdr.Close()
                                'Εισαγωγή εγγραφών από Ecxel sthn Βάση
                                sSQL.AppendLine("INSERT INTO ALPHA (reason,aptID,TTL,dtCreate,bdgID, bdgNam,bdgCode,credit) VALUES( ")
                                sSQL.AppendLine(toSQLValueS(sValRow) & ",")
                                sSQL.AppendLine(toSQLValueS(sAptID) & ",")
                                sSQL.AppendLine(toSQLValueS(sAptTTL) & ",")
                                If sDate.Length > 0 Then sSQL.AppendLine(toSQLValueS(CDate(sDate).ToString("yyyyMMdd")) & ",") Else sSQL.AppendLine("NULL,")
                                sSQL.AppendLine(toSQLValueS(sbdgID) & ",")
                                sSQL.AppendLine(toSQLValueS(sbdgNam) & ",")
                                sSQL.AppendLine(toSQLValueS(sbdgCode) & ",")
                                sSQL.AppendLine(toSQLValueS(sCredit, True) & ")")
                                Using oCmd As New SqlCommand(sSQL.ToString, CNDB)
                                    oCmd.ExecuteNonQuery()
                                End Using
                                sSQL.Clear()
                                sbdgID = "" : sbdgNam = "" : sAptID = "" : sAptTTL = ""
                            End If
                        End If
                    End If
                End If
                ProgressBarControl1.PerformStep()
                ProgressBarControl1.Update()
            Next i
            grdBANKS.DataSource = Nothing
            Me.ALPHATableAdapter.Fill(Me.Priamos_NETDataSet3.ALPHA)
            grdBANKS.DataSource = Me.Priamos_NETDataSet3.ALPHA
            grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
            GridView5.RestoreLayoutFromXml(Application.StartupPath & "\DSGNS\DEF\ALPHA.xml", OptionsLayoutBase.FullLayout)
            GridView5.BestFitColumns()
        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub
    Private Sub EUROBANK_TRANS()
        Dim sValRow As String, sDate As String, sCredit As Double
        Dim sbdgCode As String, sbdgID As String, sbdgNam As String
        Dim sAptID As String, sAptTTL As String
        Dim regex As New Regex("(\d{5})")
        Dim Cmd As SqlCommand, sdr As SqlDataReader
        Try
            ProgressBarControl1.EditValue = 0
            ProgressBarControl1.Properties.Step = 1
            ProgressBarControl1.Properties.PercentView = True
            ProgressBarControl1.Properties.Maximum = GridView5.DataRowCount - 1
            ProgressBarControl1.Properties.Minimum = 0
            Dim sSQL As New System.Text.StringBuilder
            Cmd = New SqlCommand("TRUNCATE TABLE EUROBANK", CNDB) : Cmd.ExecuteNonQuery()

            For i As Integer = 0 To GridView5.DataRowCount - 1
                If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then
                    If GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName) IsNot Nothing Then
                        sValRow = GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName).ToString()
                        If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then sDate = GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName).ToString()
                        sCredit = GridView5.GetRowCellValue(i, GridView5.Columns(2).FieldName)
                        sbdgCode = regex.Match(sValRow).ToString
                        If sCredit <> 0 Then
                            If sbdgCode.Length > 0 Then
                                Cmd = New SqlCommand("SELECT top 1 ID,Nam FROM BDG WHERE coalesce(old_Code,code)= " & toSQLValueS(sbdgCode), CNDB)
                                sdr = Cmd.ExecuteReader()
                                If (sdr.Read() = True) Then sbdgID = sdr.GetGuid(sdr.GetOrdinal("ID")).ToString : sbdgNam = sdr.GetString(sdr.GetOrdinal("Nam"))
                                sdr.Close()
                                Cmd = New SqlCommand("SELECT top 1 id,ttl FROM vw_APT WHERE coalesce(bdgoldCode,bdgcode)= " & toSQLValueS(sbdgCode) & " and ttl = " &
                                                        toSQLValueS(sValRow.Substring(sbdgCode.Length, sValRow.Length - sbdgCode.Length).Trim), CNDB)
                                sdr = Cmd.ExecuteReader()
                                If (sdr.Read() = True) Then sAptID = sdr.GetGuid(sdr.GetOrdinal("id")).ToString : sAptTTL = sdr.GetString(sdr.GetOrdinal("ttl"))
                                sdr.Close()
                                'Εισαγωγή εγγραφών από Ecxel sthn Βάση
                                sSQL.AppendLine("INSERT INTO EUROBANK (reason,aptID,TTL,dtCreate,bdgID, bdgNam,bdgCode,credit) VALUES( ")
                                sSQL.AppendLine(toSQLValueS(sValRow) & ",")
                                sSQL.AppendLine(toSQLValueS(sAptID) & ",")
                                sSQL.AppendLine(toSQLValueS(sAptTTL) & ",")
                                If sDate.Length > 0 Then sSQL.AppendLine(toSQLValueS(CDate(sDate).ToString("yyyyMMdd")) & ",") Else sSQL.AppendLine("NULL,")
                                sSQL.AppendLine(toSQLValueS(sbdgID) & ",")
                                sSQL.AppendLine(toSQLValueS(sbdgNam) & ",")
                                sSQL.AppendLine(toSQLValueS(sbdgCode) & ",")
                                sSQL.AppendLine(toSQLValueS(sCredit, True) & ")")
                                Using oCmd As New SqlCommand(sSQL.ToString, CNDB)
                                    oCmd.ExecuteNonQuery()
                                End Using
                                sSQL.Clear()
                                sbdgID = "" : sbdgNam = "" : sAptID = "" : sAptTTL = ""
                            End If
                        End If
                    End If
                End If
                ProgressBarControl1.PerformStep()
                ProgressBarControl1.Update()
            Next i
            grdBANKS.DataSource = Nothing
            Me.EUROBANKTableAdapter.Fill(Me.Priamos_NETDataSet3.EUROBANK)
            grdBANKS.DataSource = Me.Priamos_NETDataSet3.EUROBANK
            grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
            GridView5.RestoreLayoutFromXml(Application.StartupPath & "\DSGNS\DEF\EUROBANK.xml", OptionsLayoutBase.FullLayout)
            GridView5.BestFitColumns()
        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub
    Private Sub NBG_TRANS()
        Dim sValRow As String, sDate As String, sCredit As Double
        Dim sbdgCode As String, sbdgID As String, sbdgNam As String
        Dim sAptID As String, sAptTTL As String
        Dim regex As New Regex("(\d{5})")
        Dim Cmd As SqlCommand, sdr As SqlDataReader
        Try
            ProgressBarControl1.EditValue = 0
            ProgressBarControl1.Properties.Step = 1
            ProgressBarControl1.Properties.PercentView = True
            ProgressBarControl1.Properties.Maximum = GridView5.DataRowCount - 1
            ProgressBarControl1.Properties.Minimum = 0
            Dim sSQL As New System.Text.StringBuilder
            Cmd = New SqlCommand("TRUNCATE TABLE NBG", CNDB) : Cmd.ExecuteNonQuery()

            For i As Integer = 0 To GridView5.DataRowCount - 1
                If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then

                    sValRow = GridView5.GetRowCellValue(i, GridView5.Columns(2).FieldName).ToString()
                    If GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName) IsNot Nothing Then sDate = GridView5.GetRowCellValue(i, GridView5.Columns(0).FieldName).ToString()
                    sCredit = GridView5.GetRowCellValue(i, GridView5.Columns(1).FieldName)
                    sbdgCode = regex.Match(sValRow).ToString

                    If sbdgCode.Length > 0 Then
                        Cmd = New SqlCommand("SELECT top 1 ID,Nam FROM BDG WHERE coalesce(old_Code,code)= " & toSQLValueS(sbdgCode), CNDB)
                        sdr = Cmd.ExecuteReader()
                        If (sdr.Read() = True) Then sbdgID = sdr.GetGuid(sdr.GetOrdinal("ID")).ToString : sbdgNam = sdr.GetString(sdr.GetOrdinal("Nam"))
                        sdr.Close()
                        Cmd = New SqlCommand("SELECT top 1 id,ttl FROM vw_APT WHERE coalesce(bdgoldCode,bdgcode)= " & toSQLValueS(sbdgCode) & " and ttl = " & toSQLValueS(sValRow.Substring(sbdgCode.Length, sValRow.Length - sbdgCode.Length).Trim), CNDB)
                        sdr = Cmd.ExecuteReader()
                        If (sdr.Read() = True) Then sAptID = sdr.GetGuid(sdr.GetOrdinal("id")).ToString : sAptTTL = sdr.GetString(sdr.GetOrdinal("ttl"))
                        sdr.Close()
                        'Εισαγωγή εγγραφών από Ecxel sthn Βάση
                        sSQL.AppendLine("INSERT INTO NBG (reason,aptID,TTL,dtCreate,bdgID, bdgNam,bdgCode,credit) VALUES( ")
                        sSQL.AppendLine(toSQLValueS(sValRow) & ",")
                        sSQL.AppendLine(toSQLValueS(sAptID) & ",")
                        sSQL.AppendLine(toSQLValueS(sAptTTL) & ",")
                        If sDate.Length > 0 Then sSQL.AppendLine(toSQLValueS(CDate(sDate).ToString("yyyyMMdd")) & ",") Else sSQL.AppendLine("NULL,")
                        sSQL.AppendLine(toSQLValueS(sbdgID) & ",")
                        sSQL.AppendLine(toSQLValueS(sbdgNam) & ",")
                        sSQL.AppendLine(toSQLValueS(sbdgCode) & ",")
                        sSQL.AppendLine(toSQLValueS(sCredit, True) & ")")
                        Using oCmd As New SqlCommand(sSQL.ToString, CNDB)
                            oCmd.ExecuteNonQuery()
                        End Using
                        sSQL.Clear()
                        sbdgID = "" : sbdgNam = "" : sAptID = "" : sAptTTL = ""
                    End If
                End If
                ProgressBarControl1.PerformStep()
                ProgressBarControl1.Update()
            Next i
            grdBANKS.DataSource = Nothing
            Me.NBGTableAdapter.Fill(Me.Priamos_NETDataSet3.NBG)
            grdBANKS.DataSource = Me.Priamos_NETDataSet3.NBG
            grdBANKS.ForceInitialize() : grdBANKS.DefaultView.PopulateColumns()
            GridView5.RestoreLayoutFromXml(Application.StartupPath & "\DSGNS\DEF\NBG.xml", OptionsLayoutBase.FullLayout)
            GridView5.BestFitColumns()
        Catch ex As Exception
            XtraMessageBox.Show(String.Format("Error: {0}", ex.Message), ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub
    Private Sub GridView5_ShownEditor(sender As Object, e As EventArgs) Handles GridView5.ShownEditor
        Dim view As ColumnView = DirectCast(sender, ColumnView)
        If view.FocusedColumn.FieldName = "aptID" Then

            Dim editor As LookUpEdit = CType(view.ActiveEditor, LookUpEdit)
            Dim bdgID As String = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString()
            If bdgID.Length > 0 Then editor.Properties.DataSource = Me.Vw_APTTableAdapter.GetDataByBDGID(System.Guid.Parse(bdgID))

        ElseIf view.FocusedColumn.FieldName = "inhID" Then
            Dim editor As LookUpEdit = CType(view.ActiveEditor, LookUpEdit)
            Dim bdgID As String = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString()
            Dim aptID As String = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "aptID").ToString()
            If bdgID.Length > 0 And aptID.Length > 0 Then editor.Properties.DataSource = Me.COL_PER_BDG_APTTableAdapter.GetData(System.Guid.Parse(bdgID), System.Guid.Parse(aptID))

        End If
    End Sub

    Private Sub GridView5_CustomDrawCell(sender As Object, e As RowCellCustomDrawEventArgs) Handles GridView5.CustomDrawCell
        Dim GRD5 As GridView = sender
        If e.Column.FieldName = "aptID" Then e.DisplayText = GRD5.GetRowCellValue(e.RowHandle, "ttl").ToString()
        If e.Column.FieldName = "inhID" Then e.DisplayText = GRD5.GetRowCellValue(e.RowHandle, "completeDate").ToString()
    End Sub

    Private Sub RepositoryItemLookUpEdit1_EditValueChanged(sender As Object, e As EventArgs) Handles RepositoryItemLookUpEdit1.EditValueChanged
        Dim editor As DevExpress.XtraEditors.LookUpEdit = TryCast(sender, DevExpress.XtraEditors.LookUpEdit)
        Dim ttl As String
        ttl = editor.GetColumnValue("ttl").ToString
        GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "ttl", ttl)
    End Sub
    Private Sub RepColPerBdgApt_EditValueChanged(sender As Object, e As EventArgs) Handles RepColPerBdgApt.EditValueChanged
        Dim editor As DevExpress.XtraEditors.LookUpEdit = TryCast(sender, DevExpress.XtraEditors.LookUpEdit)
        Dim completeDate As String
        completeDate = editor.GetColumnValue("completeDate").ToString
        GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "completeDate", completeDate)
    End Sub
    Private Sub GridView5_CustomRowCellEdit(sender As Object, e As CustomRowCellEditEventArgs) Handles GridView5.CustomRowCellEdit
        If e.RowHandle <> grdBANKS.NewItemRowHandle AndAlso e.Column.FieldName = "imageCell" Then
            If GridView5.GetRowCellValue(e.RowHandle, "ttl") Is Nothing Then Exit Sub
            Dim aptID As String = GridView5.GetRowCellValue(e.RowHandle, "ttl").ToString()
            If aptID.Length > 0 Then
                e.RepositoryItem = txtImageCorrect
                GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "imageCell", "Matched")
            Else
                e.RepositoryItem = txtImageError
                GridView5.SetRowCellValue(GridView5.FocusedRowHandle, "imageCell", "Not Matched")
            End If
        End If

    End Sub

    Private Sub cmdExit_Click(sender As Object, e As EventArgs) Handles cmdExit.Click
        Me.Close()
    End Sub

    Private Sub GridView5_PopupMenuShowing(sender As Object, e As PopupMenuShowingEventArgs) Handles GridView5.PopupMenuShowing
        If e.MenuType = GridMenuType.Column Then
            Select Case BankMode
                Case 1 : LoadForms.PopupMenuShow(e, GridView5, "PIREOS.xml", "PIREOS")
                Case 2 : LoadForms.PopupMenuShow(e, GridView5, "ALPHA.xml", "ALPHA")
                Case 3 : LoadForms.PopupMenuShow(e, GridView5, "EUROBANK.xml", "EUROBANK")
                Case 4 : LoadForms.PopupMenuShow(e, GridView5, "NBG.xml", "NBG")
            End Select

        End If
    End Sub

    Private Sub ColInh()
        Dim sBdgID As String, sAptID As String, sInhID As String, dtcredit As String
        Dim credit As Decimal
        sBdgID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "bdgID").ToString.ToUpper
        sAptID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "aptID").ToString.ToUpper
        sInhID = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "inhID").ToString.ToUpper
        credit = GridView5.GetRowCellValue(GridView5.FocusedRowHandle, "credit")
        dtcredit = toSQLValueS(Date.Now.ToString("yyyyMMdd"))
        If sInhID = "" Or sBdgID = "" Or sAptID = "" Then
            XtraMessageBox.Show("Δεν έχουν συμπληρωθεί όλα τα στοιχεία για να κάνετε είσπραξη", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Error)
            Exit Sub
        Else
            Using oCmd As New SqlCommand("col_Calculate", CNDB)
                oCmd.CommandType = CommandType.StoredProcedure
                oCmd.Parameters.AddWithValue("@debitusrID", "CC93EEFB-B8B6-470F-983D-3604E67C6E1C") ' ΧΡΗΣΤΗΣ ΤΡΑΠΕΖΕΣ
                oCmd.Parameters.AddWithValue("@bdgID", sBdgID)
                oCmd.Parameters.AddWithValue("@aptID", sAptID)
                oCmd.Parameters.AddWithValue("@inhID", sInhID)
                oCmd.Parameters.AddWithValue("@Givencredit", credit)
                oCmd.Parameters.AddWithValue("@modifiedBy", UserProps.ID.ToString.ToUpper)
                oCmd.Parameters.AddWithValue("@ColMethodID", "F34B402C-ADD8-48E7-85A9-FFDF7DAED582") ' ΤΡΟΠΟΣ ΠΛΗΡΩΜΗΣ ΤΡΑΠΕΖΑ
                oCmd.Parameters.AddWithValue("@TenantOwner", 2)
                oCmd.Parameters.AddWithValue("@Agreed", 0)
                oCmd.ExecuteNonQuery()
                XtraMessageBox.Show("Η Είσπραξη ολοκληρώθηκε με επιτυχία", ProgProps.ProgTitle, MessageBoxButtons.OK, MessageBoxIcon.Information)
            End Using
        End If
    End Sub

    Private Sub RepColBtn_Click(sender As Object, e As EventArgs) Handles RepColBtn.Click
        ColInh()
    End Sub
End Class